# -*- coding: utf-8 -*-
"""workshop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rVkwAzbUaTvm7uaoM4-S3CMxJuzwd4aV

# python3 제어문

## 1. 세로로 출력하기
자연수 number를 입력 받아, 1부터 number까지의 수를 세로로 한줄씩 출력하시오
"""

number = int(input())

i = 1
while i <= number:
  print(i)
  i += 1

"""## 2. 가로로 출력하기
자연수 number를 입력 받아, 1부터 number까지의 수를 가로로 한칸씩 띄어 출력하시오
"""

number = int(input())

i = 1
while i <= number:
  print(i, end = ' ')
  i += 1

"""## 3. 거꾸로 세로로 출력하기
자연수 number를 입력 받아, number부터 0까지의 수를 세로로 한줄씩 출력하시오
"""

number = int(input())

while number >= 0:
  print(number)
  number -= 1

"""## 4. 거꾸로 출력해 보아요 (SWEA #1545)
자연수 number를 입력 받아, number부터 0까지의 수를 가로로 한칸씩 띄어 출력하시오.
"""

number = int(input())

while number >= 0:
  print(number, end=' ')
  number -= 1

"""## 5. N줄 덧셈 (SWEA #2025)
입력으로 자연수 number가 주어질 때, 1부터 주어진 자연수 number까지를 모두 더한
값을 출력하시오. 단, 주어지는 숫자는 10000을 넘지 않는다. 예를 들어, 주어진 숫자가
10일 경우 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 = 55이므로, 출력해야 할 값은 55이다
"""

number = int(input())

i = 1
total= 0
while i <= number:
  total += i
  i += 1  
print(total)

"""## 6. 삼각형 출력하기
자연수 number를 입력 받아, 아래와 같이 높이가 number인 삼각형을 출력하시오.
"""

number = int(input())

for i in range(number):
  print(' '*(number-i)+'*'*i)

"""## 7. 중간값 찾기 (SWEA #2063 변형)
중간값은 통계 집단의 수치를 크기 순으로 배열 했을 때 전체의 중앙에 위치하는 수치를
뜻한다. 리스트 numbers에 입력된 숫자에서 중간값을 출력하라.
"""

numbers = [
85, 72, 38, 80, 69, 65, 68, 96, 22, 49, 67,
51, 61, 63, 87, 66, 24, 80, 83, 71, 60, 64,
52, 90, 60, 49, 31, 23, 99, 94, 11, 25, 24,
]

numbers.sort()
print(numbers[int((len(numbers)-1)/2)])

"""# python 4. 함수

## 1. 간단한 N의 약수 (SWEA #1933)
입력으로 1개의 정수 N이 주어진다. 정수 N의 약수를 오름차순으로 출력하는
프로그램을 작성하시오.
"""

N = int(input())

for i in range(1,N+1):
  if N%i == 0:
    print(i, end = ' ')

"""## 2. List의 합 구하기
정수로만 이루어진 list를 전달 받아 해당 list의 모든 요소들의 합을 반환하는
list_sum 함수를 built-in 함수인 sum() 함수를 사용하지 않고 작성하시오
"""

def list_sum(l):
  total = 0
  for i in l:
    total += i
  return total

list_sum([1,2,3,4,5])

"""## 3. Dictionary로 이루어진 List의 합 구하기
Dictionary로 이루어진 list를 전달 받아 모든 dictionary의 'age' key에 해당하는 value
들의 합을 반환하는 dict_list_sum 함수를 built-in 함수인 sum() 함수를 사용하지 않고
작성하시오.
"""

l = [{'name':'kim', 'age':12}, {'name':'lee', 'age':4}]

def dict_list_sum():
  total = 0
  for i in range(len(l)):
    total = total + l[i]['age']
  return total

"""## 4. 2차원 List의 전체 합 구하기
정수로만 이루어진 2차원 list를 전달 받아 해당 list의 모든 요소들의 합을 반환하는
all_list_sum 함수를 built-in 함수인 sum() 함수를 사용하지 않고 작성하시오.
"""

def all_list_sum(l):
  total = 0
  for i in range(len(l)):
     for j in range(len(l[i])):
       total += l[i][j]
  return total

all_list_sum([[1], [2, 3], [4, 5, 6], [7, 8, 9, 10]])

"""## 5. 숫자의 의미
정수로 이루어진 list를 전달 받아, 각 정수에 대응되는 아스키 문자를 이어붙인
문자열을 반환하는 get_secret_word 함수를 작성하시오.
단, list는 65이상 90이하 그리고 97이상 122이하의 정수로만 구성되어 **있다**
"""

def get_secret_word(l):
  result =''
  for s in l:
    result += chr(s)
  return result

get_secret_word([83, 115, 65, 102, 89])

"""## 6. 내 이름은 몇일까?
문자열을 전달 받아 해당 문자열의 각 문자에 대응되는 아스키 숫자들의 합을 반환하는
get_secret_number 함수를 작성하시오. 단, 문자열은 A ~ Z, a ~ z로만 구성되어 있다
"""

def get_secret_number(l):
  result = 0
  for s in l:
    result += ord(s)
  return result

get_secret_number('happy')

"""## 7. 강한 이름
문자열 2개를 전달 받아 두 문자열의 각 문자에 대응되는 아스키 숫자들의 합을
비교하여 더 큰 합을 가진 문자열을 반환하는 get_strong_word 함수를 작성하시오.
단, 두 문자열의 아스키 숫자의 합이 같은 경우, 둘 다 반환하세요.

"""

def get_strong_word(a,b):
  result1 = 0
  result2 = 0
  for s in a:
    result1 += ord(s)
  for s in b:
    result2 += ord(s)
  if result1 > result2 :
    return a
  elif result1 < result2:
    return b
  else:
    return result1, result2

get_strong_word('delilah','dixon')