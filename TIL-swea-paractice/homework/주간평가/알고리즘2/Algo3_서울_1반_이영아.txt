(1) 스택을 이용해 괄호가 정상적으로 표기되어 있는지 검사하는 알고리즘

일단 '(' 인 괄호가 있다면 stack에  push를 해준다, 그 후 ')'인 괄호가 있다면 stack에서 pop해준다.
이때, stack에서 pop을 할 수 있고 (=스택에 남은 '(' 괄호가 있을 경우), 모든 시행 결과후 스택이 비어있다면 괄호가 정상적으로 표시되어 있다고 말할 수 있다.

이를 알고리즘으로 표현해보자면 아래와 같이 표현가능하다.
'''
string = 'if ( ( i == 0 ) && ( j == 0)))' #예시

def check(string):
    stack = []
    for s in string:
        if s == '(':
            stack.append(s)
        if s == ')':
            if len(stack) > 0:
                stack.pop()
            else:
                return False
    return True

'''
(2) 위의 문자열을 스택을 이용해 검사하는 과정에 대해, 나머지 단계의 스택 내부 상태를 표시하고 간단히 설명하라. 마지막에는 괄호가 정상인지 오류인지와 그 이유를 설명해야 한다. 

-스택의 내부 상태- 
['(', '('] # 여는 괄호를 만나 push
['('] # 닫는 괄호를 만나 pop
[] # 닫는 괄호를 만나 pop
# 닫는 괄호를 만나 pop해야하지만 스택이 []이기 때문에 pop을 할 수 없어 오류.

-괄호 정상여부-
마지막에는 괄호가 오류이다. 왜냐하면 '(' 과 ')' 쌍에 맞추어서 나누어 떨어져야 스택이 정상이지만 ')'의 개수가 더 많기 때문에 stack에서 pop을 할 수 없어 오류를 발생시킨다.
